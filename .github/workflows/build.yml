name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.0'

    - name: Build tooling binary
      run: make build-tooling

    - name: Run tests
      run: make test

    - name: Build binary
      run: ./build_tool '${{ github.event.head_commit.message }}'

    - name: Make release
      id: make_release
      env:
        GH_TOKEN: ${{secrets.GH_TOKEN}}
      if: contains(${{ github.event.head_commit.message }}, 'release') == true
      run: |
        release_output=$(./build_tool release '${{ github.event.head_commit.message }}')
        echo "upload_url=$release_output" >> $GITHUB_OUTPUT

    - name: Zip binary
      run: tar -czvf goo.linux.amd64.tar.gz ./goo

    - name: Upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.make_release.outputs.upload_url }}
        asset_path: ./goo.linux.amd64.tar.gz
        asset_name: goo.linux.amd64.tar.gz
        asset_content_type: application/x-tar
